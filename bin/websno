#!/usr/bin/env python

import sys

import websno

import websno.server
from websno.stream import EventPickleFile, RATRootFile, ZDABFile, OrcaJSONStream
from websno.store import MemoryStore, CouchDBStore, CrateSlotStore

from websno.apps.websnoed import EventViewerNamespace

if __name__ == '__main__':
    # event source
    if len(sys.argv) > 1:
        if sys.argv[1].endswith('.pickle'):
            websno.event_source = EventPickleFile(sys.argv[1], EventViewerNamespace.broadcast_event)
        elif sys.argv[1].endswith('.root'):    
            websno.event_source = RATRootFile(sys.argv[1], EventViewerNamespace.broadcast_event)
        elif sys.argv[1].endswith('.zdab'):
            websno.event_source = ZDABFile(sys.argv[1], EventViewerNamespace.broadcast_event)
        else:
            print 'Unknown file format'
            sys.exit(1)

    if websno.event_source:
        if hasattr(websno.event_source, 'get'):
            EventViewerNamespace.event_getter = websno.event_source.get
        websno.event_source.start()

    # data storage backend
    #websno.data_store = CouchDBStore('http://localhost:5984', 'ss')
    #websno.data_store = MemoryStore()
    websno.data_store = CrateSlotStore()

    # other data sources
    orca_json = OrcaJSONStream('tcp://localhost:5028', websno.data_store.set)
    websno.data_sources.append(orca_json)
    orca_json.start()

    # start web/socket server
    websno.server.serve()

    # wait for threads to exit
    websno.event_source.join()
    for source in websno.data_sources:
        source.join()

